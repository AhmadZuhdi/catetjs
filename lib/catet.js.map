{"version":3,"sources":["../src/catet.js"],"names":[],"mappings":";;;;;;;;;;;;wBASqB,UAAU;;;;sBACZ,QAAQ;;;;kBACZ,UAAU;;;;wBACJ,UAAU;;;;oBACd,WAAW;;;;;;;;;;;AAN5B,YAAY,CAAC;;IAQQ,KAAK;AAEb,WAFQ,KAAK,GAEwF;4CAAH,EAAE;;0BAAlG,KAAK;QAAL,KAAK,8BAAG,CAAC;2BAAE,MAAM;QAAN,MAAM,+BAAG,kBAAK,EAAE,EAAE;4BAAE,OAAO;QAAP,OAAO,qCAAM,SAAS,cAAS,MAAM;6BAAQ,QAAQ;QAAR,QAAQ,iCAAG,KAAK;;0BAFtF,KAAK;;;;;;;;;;;;AActB,QAAI,CAAC,KAAK,GAAG,KAAK,CAAA;;;;;;AAMlB,QAAI,CAAC,QAAQ,GAAG,CACd,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,CACR,CAAA;;;;;;AAMD,QAAI,CAAC,MAAM,GAAG,MAAM,CAAA;;;;;;AAMpB,QAAI,CAAC,OAAO,GAAG,OAAO,CAAA;;;;;;AAMtB,QAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;;;;;;AAMxB,QAAI,CAAC,EAAE,GAAG,8DAA+C,MAAM,CAAG,CAAA;;;;;AAKlE,oBAAG,cAAc,CAAC,OAAO,CAAC,CAAA;GAC3B;;eAxDkB,KAAK;;;;;;;WA8DhB,oBAAE;AACR,aAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;WAMO,oBAAW;UAAV,KAAK,gCAAG,CAAC;;AAChB,UAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,aAAO,IAAI,CAAA;KACZ;;;WAEE,eAAgB;;;wCAAZ,WAAW;AAAX,mBAAW;;;AAEhB,iBAAW,CAAC,GAAG,CAAC,UAAA,OAAO,EAAI;AACzB,cAAK,QAAQ,CAAC,MAAK,KAAK,EAAE,OAAO,CAAC,CAAA;OACnC,CAAC,CAAA;;AAEF,aAAO,IAAI,CAAC;KACb;;;WAEI,iBAAgB;;;yCAAZ,WAAW;AAAX,mBAAW;;;AAClB,iBAAW,CAAC,GAAG,CAAC,UAAA,OAAO,EAAI;AACzB,eAAK,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;OAC1B,CAAC,CAAA;;AAEF,aAAO,IAAI,CAAC;KACb;;;WAEG,gBAAgB;;;yCAAZ,WAAW;AAAX,mBAAW;;;AACjB,iBAAW,CAAC,GAAG,CAAC,UAAA,OAAO,EAAI;AACzB,eAAK,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;OAC1B,CAAC,CAAA;;AAEF,aAAO,IAAI,CAAC;KACb;;;WAEG,gBAAgB;;;yCAAZ,WAAW;AAAX,mBAAW;;;AACjB,iBAAW,CAAC,GAAG,CAAC,UAAA,OAAO,EAAI;AACzB,eAAK,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;OAC1B,CAAC,CAAA;;AAEF,aAAO,IAAI,CAAC;KACb;;;WAEI,iBAAgB;;;yCAAZ,WAAW;AAAX,mBAAW;;;AAClB,iBAAW,CAAC,GAAG,CAAC,UAAA,OAAO,EAAI;AACzB,eAAK,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;OAC1B,CAAC,CAAA;;AAEF,aAAO,IAAI,CAAC;KACb;;;WAEI,iBAAgB;;;yCAAZ,WAAW;AAAX,mBAAW;;;AAClB,iBAAW,CAAC,GAAG,CAAC,UAAA,OAAO,EAAI;AACzB,eAAK,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;OAC1B,CAAC,CAAA;;AAEF,aAAO,IAAI,CAAC;KACb;;;WAEO,kBAAC,KAAK,EAAE,OAAO,EAAC;AACtB,UAAI,SAAS,GAAG,qBAAQ,CAAC,MAAM,EAAE,CAAA;AACjC,UAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;;AAE/B,UAAG,IAAI,CAAC,QAAQ,EAAC;AACf,YAAI,CAAC,aAAa,CAAC;AACjB,mBAAS,EAAT,SAAS;AACT,iBAAO,EAAP,OAAO;AACP,eAAK,EAAL,KAAK;AACL,cAAI,EAAJ,IAAI;SACL,CAAC,CAAA;OACH;;AAED,sBAAG,UAAU,CAAC,IAAI,CAAC,OAAO,QAAM,SAAS,WAAM,KAAK,WAAM,IAAI,aAAQ,OAAO,SAAM,CAAA;KACpF;;;WAEY,uBAAC,OAAO,EAAC;AACpB,UAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AACrB,aAAO,IAAI,CAAA;KACZ;;;SA/IkB,KAAK;;;qBAAL,KAAK","file":"src/catet.js","sourcesContent":["/*\n* @Author: ahmadzuhdi\n* @Date:   2015-10-12 17:05:59\n* @Last Modified by:   ahmadzuhdi\n* @Last Modified time: 2015-10-12 18:13:07\n*/\n\n'use strict';\n\nimport Firebase from 'firebase';\nimport moment from 'moment';\nimport fs from 'fs-extra';\nimport bluebird from 'bluebird';\nimport uuid from 'node-uuid'\n\nexport default class Catet {\n\n  constructor({level = 0, appKey = uuid.v4(), logPath = `${__dirname}/logs/${appKey}.log`, useCloud = false} = {}){\n\n    /**\n     * log level\n     * @type {Number}\n     * @example\n     * 0 = debug\n     * 1 = info\n     * 2 = warn\n     * 3 = error\n     * 4 = fatal\n     */\n    this.level = level\n\n    /**\n     * mapping for level\n     * @type {Array}\n     */\n    this.levelMap = [\n      'debug',\n      'info',\n      'warn',\n      'error',\n      'fatal'\n    ]\n\n    /**\n     * app key\n     * @type {String}\n     */\n    this.appKey = appKey\n\n    /**\n     * path of log if cloud is not actived\n     * @type {String}\n     */\n    this.logPath = logPath\n\n    /**\n     * status of using cloud\n     * @type {Boolean}\n     */\n    this.useCloud = useCloud\n\n    /**\n     * firebase object\n     * @type {Object}\n     */\n    this.fb = new Firebase(`https://catetin.firebaseio.com/${appKey}`)\n\n    /**\n     * make sure file is exsist\n     */\n    fs.ensureFileSync(logPath)\n  }\n\n  /**\n   * get log level\n   * @return {Number}\n   */\n  getLevel(){\n    return this.level;\n  }\n\n  /**\n   * set level of log\n   * @param {Number} level\n   */\n  setLevel(level = 0){\n    this.level = level;\n    return this\n  }\n\n  log(...logMessages){\n\n    logMessages.map(message => {\n      this.writeLog(this.level, message)\n    })\n\n    return this;\n  }\n\n  debug(...logMessages){\n    logMessages.map(message => {\n      this.writeLog(0, message)\n    })\n\n    return this;\n  }\n\n  info(...logMessages){\n    logMessages.map(message => {\n      this.writeLog(1, message)\n    })\n\n    return this;\n  }\n\n  warn(...logMessages){\n    logMessages.map(message => {\n      this.writeLog(2, message)\n    })\n\n    return this;\n  }\n\n  error(...logMessages){\n    logMessages.map(message => {\n      this.writeLog(3, message)\n    })\n\n    return this;\n  }\n\n  fatal(...logMessages){\n    logMessages.map(message => {\n      this.writeLog(4, message)\n    })\n\n    return this;\n  }\n\n  writeLog(level, message){\n    var timestamp = moment().format()\n    var type = this.levelMap[level]\n\n    if(this.useCloud){\n      this.writeToClouds({\n        timestamp,\n        message,\n        level,\n        type\n      })\n    }\n\n    fs.appendFile(this.logPath, `[${timestamp} | ${level} | ${type}] :: ${message} \\n`)\n  }\n\n  writeToClouds(message){\n    this.fb.push(message)\n    return this\n  }\n}"]}